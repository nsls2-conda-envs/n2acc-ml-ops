docker_image: "quay.io/condaforge/linux-anvil-cos7-x86_64:latest"
env_name: "2023-1.0-py310-n2acc-ml-ops"
conda_env_file: "env-py310.yml"
conda_binary: "mamba"
python_version: "3.10"
pkg_name: ""
pkg_version: ""
extra_packages: "mamba"
channels: "-c conda-forge"
# extra_cmd_before_install: "yum install centos-release-scl -y; yum install devtoolset-9 -y; scl enable devtoolset-9 -- bash"
#extra_cmd_before_install: "yum install centos-release-scl -y \nRUN yum install devtoolset-9 -y \nRUN echo source scl_source enable devtoolset-9 >> /home/conda/.bashrc \nRUN echo"
extra_cmd_before_install: "yum install centos-release-scl -y && yum install devtoolset-9 -y"

# --- Based on the contents of /opt/rh/devtoolset-9/enable ---
# General environment variables
PATH: "/opt/rh/devtoolset-9/root/usr/bin${PATH:+:${PATH}}"
MANPATH: "/opt/rh/devtoolset-9/root/usr/share/man:${MANPATH}"
INFOPATH: "/opt/rh/devtoolset-9/root/usr/share/info${INFOPATH:+:${INFOPATH}}"
PCP_DIR: "/opt/rh/devtoolset-9/root"
# bz847911 workaround:
# we need to evaluate rpm's installed run-time % { _libdir }, not rpmbuild time
# or else /etc/ld.so.conf.d files?
rpmlibdir: $(rpm --eval \"%{_libdir}\")
# bz1017604: On 64-bit hosts, we should include also the 32-bit library path.
#if [ "$rpmlibdir" != "${rpmlibdir/lib64/}" ]; then
#  rpmlibdir32=":/opt/rh/devtoolset-9/root${rpmlibdir/lib64/lib}"
#fi
LD_LIBRARY_PATH: "/opt/rh/devtoolset-9/root$rpmlibdir$rpmlibdir32${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
LD_LIBRARY_PATH: "/opt/rh/devtoolset-9/root$rpmlibdir$rpmlibdir32:/opt/rh/devtoolset-9/root$rpmlibdir/dyninst$rpmlibdir32/dyninst${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}"
PKG_CONFIG_PATH: "/opt/rh/devtoolset-9/root/usr/lib64/pkgconfig${PKG_CONFIG_PATH:+:${PKG_CONFIG_PATH}}"
